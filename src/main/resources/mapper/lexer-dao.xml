<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ulv.pro.langen.dao.LexerDAO">

	<cache eviction="FIFO" />
	
	<resultMap id="lexerMap" type="LexerItem">
		<id     property="id"        	column="id" />
		<result property="name" 		column="name" />
		<result property="descr"        column="descr" />
		<result property="parentId" 	column="parent_id" />
		<association property="category" javaType="Lexer">
			<id     property="id"		column="category_id" />
			<result property="name" 	column="category_name" />
			<result property="descr"	column="category_descr" />
		</association>
	</resultMap>
	
	<resultMap id="lexerAndChildrenMap" type="LexerItem">
		<id     property="id"        	column="id" />
		<result property="name" 		column="name" />
		<result property="descr"        column="descr" />
		<result property="parentId" 	column="parent_id" />
		<association property="children" javaType="LexerItem">
			<id     property="id"		column="child_id" />
			<result property="name" 	column="child_name" />
			<result property="descr"	column="child_descr" />
			<result property="parentId" column="child_parent_id" />
		</association>
	</resultMap>
	
	<resultMap id="lexerAndChildrenMap2" type="LexerItem">
		<id     property="id"        	column="id" />
		<result property="name" 		column="name" />
		<result property="descr"        column="descr" />
		<result property="parentId" 	column="parent_id" />
		<collection property="children" javaType="LexerItem" ofType="LexerItem">
			<id     property="id"		column="child_id" />
			<result property="name" 	column="child_name" />
			<result property="descr"	column="child_descr" />
			<result property="parentId" column="child_parent_id" />
		</collection>
	</resultMap>
	
	<resultMap id="categoryMap" type="Lexer">
		<id     property="id"        	column="id" />
		<result property="name" 		column="name" />
		<result property="descr"        column="descr" />
	</resultMap>

	<sql id="lexerColumns"> 
		${alias}.id,
		${alias}.lex_name as name, 
		${alias}.descr, 
		${alias}.parent_id
	</sql>
	<sql id="childColumns"> 
		${alias}.id as child_id,
		${alias}.lex_name as child_name, 
		${alias}.descr as child_descr, 
		${alias}.parent_id as child_parent_id
	</sql>
	<sql id="categoryColumns"> 
		${alias}.id as category_id,
		${alias}.lex_name as category_name, 
		${alias}.descr as category_descr
	</sql>

	<sql id="joinCategory">
		JOIN lexers c ON ${alias}.parent_id = c.id
	</sql>
	
	<select id="getLexers" resultMap="lexerMap" parameterType="Lexer" useCache="true">
		SELECT 
			<include refid="lexerColumns"><property name="alias" value="l"/></include>,
			<include refid="categoryColumns"><property name="alias" value="c"/></include>
		FROM lexers l 
			<include refid="joinCategory"><property name="alias" value="l"/></include>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="id != null"> AND l.id = #{id}</if>
			<if test="name != null">
				AND l.lex_name = #{name}
			</if>
			<if test="category.id != null"> AND c.id = #{category.id}</if>
			<if test="category != null and category.name != null">
				AND c.lex_name = #{category.name}
			</if>
		</trim>
	</select>
	
	<select id="getLexerAndChildren" parameterType="integer" resultMap="lexerAndChildrenMap">
		SELECT 
			<include refid="lexerColumns"><property name="alias" value="l"/></include>,
			<include refid="childColumns"><property name="alias" value="lch"/></include>
		FROM lexers l
		LEFT JOIN lexers lch ON lch.parent_id = l.id
		WHERE l.id = #{value}
	</select>
	
	<select id="getLexersAndChildren" parameterType="list" resultMap="lexerAndChildrenMap">
		SELECT 
			<include refid="lexerColumns"><property name="alias" value="l"/></include>,
			<include refid="childColumns"><property name="alias" value="lch"/></include>
		FROM lexers l
		LEFT JOIN lexers lch ON lch.parent_id = l.id
		WHERE l.id IN 
		<foreach collection="list" item="value" separator="," open="(" close=")">
			#{value}
		</foreach>
	</select>
	
	<select id="getLexersAndChildren2" parameterType="integer" resultMap="lexerAndChildrenMap2">
		SELECT 
			<include refid="lexerColumns"><property name="alias" value="l"/></include>, 
			<include refid="childColumns"><property name="alias" value="lch"/></include>
		FROM lexers l
		LEFT JOIN lexers lch ON lch.parent_id = l.id
		WHERE 
			<choose>
				<when test="value == null">l.parent_id is null</when>
				<otherwise>l.parent_id = #{value}</otherwise>
			</choose>
	</select>
	
	<select id="getForms" parameterType="TemplateSlot" resultMap="lexerMap">
		SELECT 
			<include refid="lexerColumns"><property name="alias" value="sl"/></include>
		FROM slot_specified ss
		JOIN lexers sl ON sl.id = ss.specified_id
		WHERE ss.template_id = #{templateId}
		AND ss.ordering = #{ordering}
	</select>
	
	
	
	<!-- <select id="findByNameOrDescr" resultMap="lexerMap" parameterType="Lexer" useCache="true">
		SELECT 
			<include refid="lexerColumns"><property name="alias" value="l"/></include>,
			<include refid="categoryColumns"><property name="alias" value="c"/></include>
			FROM lexers l 
			<include refid="joinCategory"><property name="alias" value="l"/></include>
		WHERE c.id = #{category.id}
		AND (LOWER(l.pos_name) like LOWER(#{name}) OR LOWER(l.descr) like LOWER(#{name}))
	</select> -->

	<insert id="addLexer" parameterType="LexerItem" flushCache="true">
		<selectKey keyProperty="id" keyColumn="id" order="AFTER" resultType="integer">
			SELECT currval('lexers_id_seq') as id
		</selectKey>
		INSERT INTO lexers (lex_name, descr, parent_id)
		VALUES (#{name}, #{descr}, #{category.id})
	</insert>

	<update id="updateLexer" parameterType="LexerItem" flushCache="true">
		UPDATE lexers SET
			lex_name = #{name},
			descr = #{descr}
		WHERE id = #{id}
	</update>

	<!-- category -->

	<select id="getCategories" parameterType="Lexer" resultMap="lexerMap" useCache="true">
		SELECT 
			<include refid="lexerColumns"><property name="alias" value="l"/></include>
		FROM lexers l
		WHERE parent_id is null
	</select>
	
	<insert id="addLexerCategory" parameterType="Lexer" flushCache="true">
		<selectKey keyProperty="id" keyColumn="id" order="AFTER" resultType="integer">
			SELECT currval('lexers_id_seq') as id
		</selectKey>
		INSERT INTO lexers (lex_name, descr)
		VALUES (#{name}, #{descr})
	</insert>

	<update id="updateLexerCategory" parameterType="Lexer" flushCache="true">
		UPDATE lexers SET
			lex_name = #{name},
			descr = #{descr}
		WHERE id = #{id}
	</update>
	
</mapper>
